"""empty message

Revision ID: 8d8279a86def
Revises: 8850fb7d527b
Create Date: 2024-09-24 09:22:07.352266

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8d8279a86def'
down_revision = '8850fb7d527b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('statement_id', sa.Uuid(), nullable=False),
    sa.Column('person_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('last_notification_type', sa.Enum('ADDING_ADULT', 'ADDING_MINOR', 'UPDATING_MINOR_PUBLIC', name='emailtype'), nullable=True),
    sa.Column('last_notification_datetime', sa.DateTime(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('statement_id'),
    sqlite_autoincrement=True
    )
    op.create_table('person_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('statement_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('person_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('birthdate', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('last_notification_type', sa.Enum('ADDING_ADULT', 'ADDING_MINOR', 'UPDATING_MINOR_PUBLIC', name='emailtype'), autoincrement=False, nullable=True),
    sa.Column('last_notification_datetime', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    op.create_table('ownership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('statement_id', sa.Uuid(), nullable=False),
    sa.Column('ownership_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('statement_id'),
    sqlite_autoincrement=True
    )
    op.create_table('ownership_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('statement_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('ownership_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('person_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('submission_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=postgresql.ENUM('other', 'standard', name='submissiontype'),
               nullable=False)
        batch_op.alter_column('submitted_datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('submitted_payload',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
        batch_op.alter_column('submitter_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('payload')

    with op.batch_alter_table('submission_history', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=postgresql.ENUM('other', 'standard', name='submissiontype'),
               nullable=False,
               autoincrement=False)
        batch_op.alter_column('submitted_datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               autoincrement=False)
        batch_op.alter_column('submitted_payload',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False,
               autoincrement=False)
        batch_op.alter_column('submitter_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
        batch_op.drop_column('payload')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=1000),
               nullable=False)
        batch_op.alter_column('sub',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
        batch_op.alter_column('iss',
               existing_type=sa.VARCHAR(length=1024),
               nullable=False)
        batch_op.alter_column('idp_userid',
               existing_type=sa.VARCHAR(length=256),
               nullable=False)
        batch_op.alter_column('creation_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('creation_date',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
        batch_op.alter_column('idp_userid',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
        batch_op.alter_column('iss',
               existing_type=sa.VARCHAR(length=1024),
               nullable=True)
        batch_op.alter_column('sub',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=1000),
               nullable=True)

    with op.batch_alter_table('submission_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.alter_column('submitter_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
        batch_op.alter_column('submitted_payload',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True,
               autoincrement=False)
        batch_op.alter_column('submitted_datetime',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               autoincrement=False)
        batch_op.alter_column('type',
               existing_type=postgresql.ENUM('other', 'standard', name='submissiontype'),
               nullable=True,
               autoincrement=False)

    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.add_column(sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.alter_column('submitter_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('submitted_payload',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
        batch_op.alter_column('submitted_datetime',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('type',
               existing_type=postgresql.ENUM('other', 'standard', name='submissiontype'),
               nullable=True)

    op.drop_table('ownership_history')
    op.drop_table('ownership')
    op.drop_table('person_history')
    op.drop_table('person')
    # ### end Alembic commands ###
