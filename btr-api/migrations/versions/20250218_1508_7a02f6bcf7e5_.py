"""empty message

Revision ID: 7a02f6bcf7e5
Revises: bcce6df0c72a
Create Date: 2025-02-18 15:08:24.973442

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7a02f6bcf7e5'
down_revision = 'bcce6df0c72a'
branch_labels = None
depends_on = None


def upgrade():
    status_type = sa.Enum('PASSED', 'REJECTED', 'AWAITING_REVIEW', name='requeststatus')
    status_type.create(op.get_bind())

    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status',status_type , nullable=False, server_default='AWAITING_REVIEW'))

    with op.batch_alter_table('request_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', status_type, autoincrement=False, nullable=False, server_default='AWAITING_REVIEW'))

    op.create_table('comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('type', sa.Enum('REQUEST', name='commenttypes'), nullable=False),
    sa.Column('submitter_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('related_uuid', sa.Uuid(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['submitter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comment_uuid'), ['uuid'], unique=False)

    op.create_table('comment_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('uuid', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('type', sa.Enum('REQUEST', name='commenttypes'), autoincrement=False, nullable=False),
    sa.Column('submitter_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('related_uuid', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('text', sa.String(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['submitter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('comment_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comment_history_uuid'), ['uuid'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('submission_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_submission_history_business_identifier'))
        batch_op.create_index('ix_submission_history_business_identifier', ['business_identifier'], unique=False)

    with op.batch_alter_table('request_history', schema=None) as batch_op:
        batch_op.drop_column('status')

    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.drop_column('status')

    op.execute('DROP TYPE requeststatus')

    with op.batch_alter_table('comment_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_history_uuid'))

    op.drop_table('comment_history')
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_uuid'))

    op.drop_table('comment')

    op.execute('DROP TYPE commenttypes')

    # ### end Alembic commands ###
