{
  "$id": "https://btr.gov.bc.ca/.well_known/schemas/components.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "version": "0.3",
  "definitions": {
    "StatementDate": {
      "title": "Statement date",
      "description": "The date on which this statement was made.",
      "type": "string",
      "format": "date"
    },
    "Source": {
      "title": "Source",
      "description": "The source object is used to explain where information in a statement originated from, and to link to supporting information.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Source type",
          "description": "What type of source is this? Multiple tags can be combined. Values should come from the source type codelist.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "selfDeclaration",
              "officialRegister",
              "thirdParty",
              "primaryResearch",
              "verified"
            ],
            "codelist": "sourceType.csv",
            "openCodelist": false
          }
        },
        "description": {
          "title": "Description",
          "description": "Where required, additional free-text information about the source of this statement can be provided here.",
          "type": "string"
        },
        "url": {
          "title": "Source URL",
          "description": "If this information was fetched from an external URL, or a machine or human readable web page is available that provides additional information on how this statement was sourced, provide the URL.",
          "type": "string",
          "format": "uri"
        },
        "retrievedAt": {
          "title": "Retrieved at",
          "description": "If this statement was imported from some external system, include a timestamp indicating when this took place. The statement's own date should be set based on the source information.",
          "type": "string",
          "format": "date-time"
        },
        "assertedBy": {
          "title": "Asserted by",
          "description": "Who is making this statement? This may be the name of the person or organisation making a self-declaration (in which case, please make sure the name field matches the organisation or person name field), or the name or description of some other party. If this statement has been verified, this may also include the name of the organisation providing verification.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Agent"
          }
        }
      }
    },
    "Agent": {
      "type": "object",
      "title": "Agent",
      "description": "An individual, organisation or other responsible agent making, or supporting, a given statement or annotation.",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the agent",
          "type": "string"
        },
        "uri": {
          "title": "URI",
          "description": "An optional URI to identify the agent.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "Identifier": {
      "title": "Identifier",
      "description": "An identifier that has been assigned to this person or entity. The scheme or list from which the identifier is drawn should be declared.",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "The identifier for this person or entity as provided in the declared scheme.",
          "type": "string"
        },
        "scheme": {
          "title": "Scheme",
          "description": "For entity statements, the scheme should be a entry from the org-id.guide (https://www.org-id.guide) codelist. For person statements, the scheme should have the pattern {JURISDICTION}-{TYPE} where JURISDICTION is an ISO 3-digit country code and TYPE is one of PASSPORT, TAXID or IDCARD. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
          "type": "string"
        },
        "schemeName": {
          "title": "Scheme name",
          "description": "The name of this scheme, where the org-id code is unknown or only an unvalidated string is provided. `scheme` or `schemeName` (or both) MUST be included in an Identifier object.",
          "type": "string"
        },
        "uri": {
          "title": "URI",
          "description": "Where this identifier has a canonical URI (https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) this may be included",
          "type": "string",
          "format": "uri"
        }
      },
      "anyOf": [
        {
          "required": [
            "scheme"
          ]
        },
        {
          "required": [
            "schemeName"
          ]
        },
        {
          "required": [
            "scheme",
            "schemeName"
          ]
        }
      ]
    },
    "ID": {
      "title": "Statement Identifier",
      "description": "A persistent globally unique identifier for this statement.",
      "type": "string",
      "minLength": 32,
      "maxLength": 64
    },
    "Address": {
      "title": "Address",
      "description": "A free text address string, providing as much address data as is relevant, suitable for processing using address parsing algorithms. For some uses (for example, Place of Birth) only a town and country are required.",
      "type": "object",
      "properties": {
        "street": {
          "type": "string",
          "maxLength": 50,
          "description": "Street address and name."
        },
        "streetAdditional": {
          "type": "string",
          "maxLength": 50,
          "description": "Additional street address information."
        },
        "city": {
          "type": "string",
          "maxLength": 40,
          "description": "City, Town, or Village."
        },
        "region": {
          "type": [
            "string",
            "null"
          ],
          "maxLength": 2,
          "description": "For Canada or USA, 2 character province or state code."
        },
        "postalCode": {
          "type": "string",
          "maxLength": 15,
          "description": "Postal Code in A1A 1A1 format for Canada, or zip code for US addresses."
        },
        "locationDescription": {
          "type": "string",
          "maxLength": 80,
          "description": "Additional description, or description how to reach address that has no postal code/street etc.."
        },
        "country": {
          "title": "Country",
          "description": "The 2-letter country code (ISO 3166-1) for this address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        }
      }
    },
    "Name": {
      "title": "Name",
      "description": "An name by which this individual is known. Names should be provided in `fullName`, and may optionally be broken down in the `familyName`, `givenName` and `patronymicName` fields, based on the EC ISA Core Person Vocabulary (https://joinup.ec.europa.eu/solution/e-government-core-vocabularies) definitions.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What kind of name is this? See the nameType codelist.",
          "type": "string",
          "enum": [
            "individual",
            "translation",
            "transliteration",
            "former",
            "alternative",
            "birth"
          ],
          "codelist": "nameType.csv",
          "openCodelist": false
        },
        "fullName": {
          "title": "Full name",
          "description": "The full name contains the complete name of a person as one string.",
          "type": "string"
        },
        "familyName": {
          "title": "Family name",
          "description": "A family name is usually shared by members of a family. This attribute also carries prefixes or suffixes which are part of the Family Name, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. Multiple family names, such as are commonly found in Hispanic countries, are recorded in the single Family Name field so that, for example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'Cervantes Saavedra.'",
          "type": "string"
        },
        "givenName": {
          "title": "Given names",
          "description": "A given name, or multiple given names, are the denominator(s) that identify an individual within a family. These are given to a person by his or her parents at birth or may be legally recognised as 'given names' through a formal process. All given names are ordered in one field so that, for example, the given name for Johann Sebastian Bach is 'Johann Sebastian'.",
          "type": "string"
        },
        "patronymicName": {
          "title": "Patronymic Name",
          "description": "Patronymic names are important in some countries. Iceland does not have a concept of family name in the way that many other European countries do, for example. In Bulgaria and Russia, patronymic names are in every day usage, for example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'.",
          "type": "string"
        }
      },
      "required": [
        "fullName"
      ]
    },
    "Interest": {
      "title": "Interest",
      "description": "A description of the interest held by an interestedParty in another entity.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type of interest",
          "description": "A codelist value indicating the nature of the interest. See the interestType codelist",
          "type": "string",
          "enum": [
            "shareholding",
            "votingRights",
            "appointmentOfBoard",
            "otherInfluenceOrControl",
            "seniorManagingOfficial",
            "settlor",
            "trustee",
            "protector",
            "beneficiaryOfLegalArrangement",
            "rightsToSurplusAssetsOnDissolution",
            "rightsToProfitOrIncome",
            "rightsGrantedByContract",
            "conditionalRightsGrantedByContract",
            "controlViaCompanyRulesOrArticles",
            "controlByLegalFramework",
            "boardMember",
            "boardChair",
            "unknownInterest",
            "unpublishedInterest",
            "enjoymentAndUseOfAssets",
            "rightToProfitOrIncomeFromAssets"
          ],
          "codelist": "interestType.csv",
          "openCodelist": false
        },
        "directOrIndirect": {
          "title": "Direct or indirect",
          "description": "How directly the interest is exercised by the interested party. The value MUST be 'indirect' if intermediate entities or agents are known to exist, and MUST be 'direct' if such intermediaries are known not to exist. Otherwise the value MUST be 'unknown'.",
          "type": "string",
          "enum": [
            "direct",
            "indirect",
            "unknown"
          ],
          "codelist": "directOrIndirect.csv",
          "openCodelist": false
        },
        "beneficialOwnershipOrControl": {
          "title": "Beneficial ownership or control",
          "description": "Does this statement assert this as a beneficial ownership or control interest? A beneficial ownership or control interest is always between a natural person and some entity, and exists where the person ultimately benefits from, or has a degree of control over, the entity. There may be cases where a person has an interest in an entity, but where there are arrangements or other conditions that mean this interest does not constitute beneficial ownership or control.",
          "type": "boolean"
        },
        "details": {
          "title": "Details",
          "description": "This field may be used to provide the local name given to this kind of interest, or any further semi-structured or unstructured information to clarify the nature of the interest held.",
          "type": "string"
        },
        "share": {
          "title": "Percentage share",
          "description": "Where an exact percentage is available, this should be given, and `maximum` and `minimum` values set to the same as the exact percentage. Otherwise, `maximum` and `minimum` can be used to record the range into which the share of this kind of interest falls. By default the `minimum` is inclusive and the `maximum` exclusive (minimum-value ≤ share < maximum-value). If you wish to change these defaults, use the `exclusiveMinimum` and `exclusiveMaximum` properties.",
          "type": "object",
          "properties": {
            "exact": {
              "title": "Exact share",
              "description": "The exact share of this interest held (where available).",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "maximum": {
              "title": "Maximum share",
              "description": "The upper bound of the share of this interest known to be held.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "minimum": {
              "title": "Minimum share",
              "description": "The lower bound of the share of this interest known to be held.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "exclusiveMinimum": {
              "title": "Exclusive minimum",
              "description": "If `exclusiveMinimum` is true, then the share is at least greater than the `minimum` value given. E.g. if `minimum` is '25', the share is at least 25.1, and not simply 25.",
              "type": "boolean",
              "default": false
            },
            "exclusiveMaximum": {
              "title": "Exclusive maximum",
              "description": "If `exclusiveMaximum` is true, then the share is at least less than the `maximum` value given. E.g. if `maximum` is '50', the share is less than 49.999, and not simply 50.",
              "type": "boolean",
              "default": true
            }
          }
        },
        "startDate": {
          "title": "Start date",
          "description": "When did this interest first occur. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "title": "End date",
          "description": "When did this interest cease. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "Country": {
      "title": "Country",
      "description": "A country MUST have a name. A country SHOULD have a 2-letter country code (ISO 3166-1)",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the country",
          "type": "string"
        },
        "code": {
          "title": "Country code",
          "description": "The 2-letter country code (ISO 3166-1) for this country.",
          "type": "string",
          "maxLength": 2,
          "minLength": 2
        }
      },
      "required": [
        "name"
      ]
    },
    "Publisher": {
      "type": "object",
      "title": "Publisher",
      "description": "Details of the organisation or individual publishing a statement.",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the publisher",
          "type": "string"
        },
        "url": {
          "title": "URL",
          "description": "The URL of the parent dataset or of the publisher's website homepage",
          "type": "string",
          "format": "uri"
        }
      },
      "anyOf": [
        {
          "required": [
            "name"
          ]
        },
        {
          "required": [
            "url"
          ]
        }
      ]
    },
    "PublicationDetails": {
      "title": "Publication Details",
      "description": "Information concerning the publication of this statement.",
      "type": "object",
      "properties": {
        "publicationDate": {
          "title": "Publication date",
          "description": "The date on which this statement was published.",
          "type": "string",
          "format": "date"
        },
        "bodsVersion": {
          "title": "BODS version",
          "description": "The version of the Beneficial Ownership Data Standard to which this statement conforms, expressed as major.minor. For example: 0.2 or 1.0.",
          "type": "string",
          "pattern": "^(\\d+\\.)(\\d+)$"
        },
        "license": {
          "title": "License URL",
          "description": "A link to the license that applies to this statement. The canonical URI of the license SHOULD be used. Publishers are encouraged to use a Public Domain Dedication or Open Definition Conformant (http://opendefinition.org/licenses/) license.",
          "type": "string",
          "format": "uri"
        },
        "publisher": {
          "title": "Publisher",
          "description": "Details of the organisation or individual publishing this statement.",
          "$ref": "https://btr.gov.bc.ca/.well_known/schemas/components.json#/definitions/Publisher"
        }
      },
      "required": [
        "publicationDate",
        "bodsVersion",
        "publisher"
      ]
    }
  }
}
